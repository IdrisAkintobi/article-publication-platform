services:
    mongo-1:
        container_name: 'mongo-1'
        entrypoint: >
            /bin/bash -c '
            openssl rand -base64 756 > /data/keys/keyfile.key &&
            chmod 400 /data/keys/keyfile.key &&
            chown mongodb:mongodb /data/keys/keyfile.key &&
            /usr/local/bin/docker-entrypoint.sh mongod --replSet rs0 --keyFile /data/keys/keyfile.key --bind_ip_all'
        image: 'mongo:8.0'
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
            MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
        volumes:
            - 'mongo1data:/data/db'
            - 'mongo1config:/data/configdb'
            - 'db-keys:/data/keys'
        healthcheck:
            test: >
                mongosh
                -u $${MONGO_INITDB_ROOT_USERNAME}
                -p $${MONGO_INITDB_ROOT_PASSWORD}
                --eval "
                  try {
                    rs.status()
                  } catch (err) {
                    rs.initiate({
                      _id: 'rs0',
                      members: [
                        { _id: 0, host: '172.16.32.10:27017', priority: 1 },
                        { _id: 1, host: '172.16.32.20:27017', priority: 0.5 },
                        { _id: 2, host: '172.16.32.30:27017', priority: 0.5 }
                      ]
                    })
                  }
                " | mongosh --port 27017 --quiet
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        networks:
            db-network:
                ipv4_address: 172.16.32.10
                ipv6_address: 2001:3984:3211::10
        restart: unless-stopped
        depends_on:
            - mongo-2
            - mongo-3

    mongo-2:
        container_name: 'mongo-2'
        image: 'mongo:8.0'
        volumes:
            - 'mongo2data:/data/db'
            - 'mongo2config:/data/configdb'
            - 'db-keys:/data/keys'
        command: ['--replSet', 'rs0', '--bind_ip_all', '--keyFile', '/data/keys/keyfile.key']
        networks:
            db-network:
                ipv4_address: 172.16.32.20
                ipv6_address: 2001:3984:3211::20
        restart: unless-stopped

    mongo-3:
        container_name: 'mongo-3'
        image: 'mongo:8.0'
        volumes:
            - 'mongo3data:/data/db'
            - 'mongo3config:/data/configdb'
            - 'db-keys:/data/keys'
        command: ['--replSet', 'rs0', '--bind_ip_all', '--keyFile', '/data/keys/keyfile.key']
        networks:
            db-network:
                ipv4_address: 172.16.32.30
                ipv6_address: 2001:3984:3211::30

        restart: unless-stopped

networks:
    db-network:
        ipam:
            config:
                - subnet: '172.16.32.0/24'
                - subnet: '2001:3984:3211::/64'

volumes:
    mongo1data:
    mongo1config:
    mongo2data:
    mongo2config:
    mongo3data:
    mongo3config:
    db-keys:
